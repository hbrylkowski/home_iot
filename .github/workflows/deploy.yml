name: Deployment

concurrency: production

on:
  push:
    branches:
      - master

jobs:
  get_state:
    runs-on: self-hosted
    environment: dev
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache ESPHome
        uses: actions/cache@v2
        with:
          path: ~/.esphome
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - run: pip install esphome
      - name: Get last commit data
        id: last_update
        run: echo "::set-output name=commit_sha::$(curl http://ac.local/text_sensor/commit | jq -r .value)"
      - name: Get current deployed config
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.last_update.outputs.commit_sha }}
      - run: esphome config ac.yml > old.yml
        env:
          SSID: ${{ secrets.SSID }}
          WIFI_PASS: ${{ secrets.WIFI_PASS }}
          FALLBACK_PASS: ${{ secrets.FALLBACK_PASS }}
          COMMIT_SHA: ${{ steps.last_update.outputs.commit_sha }}
      - uses: actions/checkout@v3
        with:
          clean: false
      - run: esphome config ac.yml | colordiff -y old.yml - || exit 0
        env:
          SSID: ${{ secrets.SSID }}
          WIFI_PASS: ${{ secrets.WIFI_PASS }}
          FALLBACK_PASS: ${{ secrets.FALLBACK_PASS }}
          COMMIT_SHA: $GITHUB_SHA

  deployment:
    runs-on: self-hosted
    environment: prod
    needs: get_state
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache ESPHome
        uses: actions/cache@v2
        with:
          path: ~/.esphome
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - run: pip install esphome
      - name: Add quotes to commit sha
        id: add_quotes
        run: echo "::set-output name=commit_sha::\"$GITHUB_SHA\""
#      - run: esphome run ac.yml --device ac.local --no-logs
#        env:
#          SSID: ${{ secrets.SSID }}
#          WIFI_PASS: ${{ secrets.WIFI_PASS }}
#          FALLBACK_PASS: ${{ secrets.FALLBACK_PASS }}
#          COMMIT_SHA: ${{ steps.add_quotes.outputs.commit_sha }}
